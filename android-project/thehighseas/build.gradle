apply plugin: 'com.android.application'

android {
    compileSdkVersion 33
    defaultConfig {
        applicationId "com.honeybunch.thehighseas"
        minSdkVersion 16
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        externalNativeBuild {
            cmake {
                arguments "-DTB_SOURCE_PATH=../toybox", "-DCMAKE_TOOLCHAIN_FILE=$System.env.VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake", "-DVCPKG_CHAINLOAD_TOOLCHAIN_FILE=$System.env.ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake", "-DVCPKG_TARGET_TRIPLET=arm64-android", "-DANDROID_PLATFORM=android-16", "-DANDROID_STL=c++_static"
                abiFilters 'arm64-v8a'
            }
        }
    }
    buildTypes {
        debug {
            sourceSets.main {
                assets.srcDir "outputs/cmake/Debug/6q2on151/arm64-v8a/Debug/assets"
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            sourceSets.main {
                assets.srcDir "outputs/cmake/Release/6q2on151/arm64-v8a/Release/assets"
            }
        }
    }

    applicationVariants.all { variant ->
        tasks["merge${variant.name.capitalize()}Assets"]
            .dependsOn("externalNativeBuild${variant.name.capitalize()}")
    }
    if (!project.hasProperty('EXCLUDE_NATIVE_LIBS')) {
        sourceSets.main {
            jniLibs.srcDir 'libs'
        }
        externalNativeBuild {
            cmake {
                buildStagingDirectory "./outputs/cmake"
                path '../../CMakeLists.txt'
            }
        }
       
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
}
